prototype(Dotpulse.OutdatedBrowser:Markup) <  prototype(TYPO3.TypoScript:Tag) {
    language = TYPO3.TypoScript:Case {
        @context {
            availableLanguages = ${['cs','da','de','el','en','es-pe','es','et','fa','fi','fr','hr','hu','id','it','ja','ko','lt','nb','nl','pl','pt-br','pt','ro','ru','sk','sl','sv','tr','uk','zh-cn','zh-tw']}
            documentLanguage = TYPO3.TypoScript:Case {
                hasDimension {
                    condition = ${Configuration.setting('TYPO3.TYPO3CR.contentDimensions.language') != null}
                    renderer = ${String.replace(documentNode.context.dimensions.language[0], '_', '-')}
                }
                hasDefaultLocale {
                    condition = ${String.crop(Configuration.setting('TYPO3.Flow.i18n.defaultLocale'), 2)}
                    renderer = ${String.crop(Configuration.setting('TYPO3.Flow.i18n.defaultLocale'), 2)}
                }
                fallbackLanguage {
                    condition = ${Configuration.setting('Dotpulse.OutdatedBrowser.fallbackLanguage')}
                    renderer = ${Configuration.setting('Dotpulse.OutdatedBrowser.fallbackLanguage')}
                }
                default {
                    condition = true
                    renderer = 'en'
                }
            }
            fallbackLanguage = TYPO3.TypoScript:Case {
                fallbackLanguage {
                    condition = ${Configuration.setting('Dotpulse.OutdatedBrowser.fallbackLanguage')}
                    renderer = ${Configuration.setting('Dotpulse.OutdatedBrowser.fallbackLanguage')}
                }
                default {
                    condition = true
                    renderer = 'en'
                }
            }
        }
        hasFile {
            condition = ${Array.indexOf(availableLanguages, documentLanguage) != -1}
            renderer = ${documentLanguage}
        }
        noFile {
            condition = ${Array.indexOf(availableLanguages, fallbackLanguage) != -1}
            renderer = ${fallbackLanguage}
        }
        fallbackToEn {
            condition = true
            renderer = 'en'
        }
    }
    lowerThan = ${Configuration.setting('Dotpulse.OutdatedBrowser.lowerThan')}
    target = ${Configuration.setting('Dotpulse.OutdatedBrowser.target')}

    @context.props = ${this}

    tagName = 'div'
    attributes {
        id = 'outdated'
        data-lowerthan = TYPO3.TypoScript:Case {
            ie8 {
                condition = ${props.lowerThan == 'IE8'}
                renderer ='borderSpacing'
            }
            ie9 {
                condition = ${props.lowerThan == 'IE9'}
                renderer ='boxShadow'
            }
            ie10 {
                condition = ${props.lowerThan == 'IE10'}
                renderer ='transform'
            }
            ie11 {
                condition = ${props.lowerThan == 'IE11'}
                renderer ='borderImage'
            }
            edge {
                condition = ${props.lowerThan == 'Edge'}
                renderer ='js:Promise'
            }
            flexbox {
                condition = ${props.lowerThan == 'Flexbox'}
                renderer ='flex-wrap'
            }
            oldGrid {
                condition = ${props.lowerThan == 'oldGrid'}
                renderer ='grid-row'
            }
            grid {
                condition = ${props.lowerThan == 'Grid'}
                renderer ='grid-auto-flow'
            }
            a23 {
                condition = ${props.lowerThan == 'A23'}
                renderer ='writing-mode'
            }
            cssProperty {
                condition = true
                renderer = ${props.lowerThan}
            }
        }
    }

    content = TYPO3.TypoScript:Array {
        CSS = Dotpulse.OutdatedBrowser:CSS {
            @if.include = ${Configuration.setting('Dotpulse.OutdatedBrowser.css.include')}
        }
        Markup = TYPO3.TypoScript:Template {
            templatePath = ${'resource://Dotpulse.OutdatedBrowser/Private/Templates/' + props.language + '.html'}
            // Change target
            @process.target = ${props.target ? String.replace(value, 'id="btnUpdateBrowser"', 'id="btnUpdateBrowser" rel="noopener" target="' + props.target + '"') : value}
        }
        Javascript = Dotpulse.OutdatedBrowser:Javascript {
            @if.include = ${Configuration.setting('Dotpulse.OutdatedBrowser.javascript.include')}
        }
    }
}
